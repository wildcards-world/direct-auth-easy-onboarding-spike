// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Client from "./gql-client/Client.bs.js";
import * as DirectAuth from "./DirectAuth.bs.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as AdminOverview from "./AdminOverview.bs.js";
import * as Client$1 from "@apollo/client";

function App$LoggedInPage(Props) {
  var privateKey = Props.privateKey;
  var ethAddress = Props.ethAddress;
  var testFunc = ((privKey, publicKey) => {
        const lib = require("./initPrivateKeyAandSignExample.js").exampleCode;
        lib(privKey, publicKey);
      });
  testFunc(privateKey, ethAddress);
  return React.createElement(React.Fragment, undefined, React.createElement("h1", undefined, "You are logged in!"), React.createElement("p", undefined, ethAddress), React.createElement("p", undefined, privateKey));
}

var LoggedInPage = {
  make: App$LoggedInPage
};

function App$AuthPage(Props) {
  var torusObj = Props.torusObj;
  var match = React.useState(function () {
        
      });
  var setYourEthAddress = match[1];
  var yourEthAddress = match[0];
  var onClick = function (param) {
    var __x = torusObj.triggerLogin({
          name: "Hosted Email Passwordless",
          typeOfLogin: "jwt",
          clientId: "P7PJuBCXIHP41lcyty0NEb7Lgf7Zme8Q",
          verifier: "torus-auth0-passwordless",
          jwtParams: {
            domain: "https://torus-test.auth0.com",
            verifierIdField: "name",
            connection: "",
            isVerifierIdCaseSensitive: false
          }
        });
    __x.then(function (loginObj) {
          console.log("THE LOGIN OBJECT", loginObj);
          return Promise.resolve(Curry._1(setYourEthAddress, (function (param) {
                            return [
                                    loginObj.publicAddress,
                                    loginObj.privateKey
                                  ];
                          })));
        });
    
  };
  return React.createElement("div", undefined, yourEthAddress !== undefined ? React.createElement(App$LoggedInPage, {
                    privateKey: yourEthAddress[1],
                    ethAddress: yourEthAddress[0]
                  }) : React.createElement(React.Fragment, undefined, React.createElement("h1", undefined, "Login With DirectAuth"), React.createElement("button", {
                        onClick: onClick
                      }, "Passwordless Login")));
}

var AuthPage = {
  make: App$AuthPage
};

function App(Props) {
  var match = React.useState(function () {
        
      });
  var setTorusInstance = match[1];
  React.useEffect((function () {
          var __x = DirectAuth.createTorusSdk(undefined);
          __x.then(function (torusInstance) {
                return Promise.resolve(Curry._1(setTorusInstance, (function (param) {
                                  return Caml_option.some(torusInstance);
                                })));
              });
          
        }), []);
  return React.createElement(Client$1.ApolloProvider, {
              client: Client.instance,
              children: React.createElement(AdminOverview.make, {})
            });
}

var make = App;

export {
  LoggedInPage ,
  AuthPage ,
  make ,
  
}
/* react Not a pure module */
