// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

var getTorus = (() => {
    return require("./directauth.js").createTorusSdk();
  });

function App$AuthPage(Props) {
  var torusObj = Props.torusObj;
  console.log(torusObj);
  var match = React.useState(function () {
        
      });
  var setYourEthAddress = match[1];
  var yourEthAddress = match[0];
  var torusLogin = ((torusObj) => {
        return torusObj.triggerLogin({
          name: "Google",
          typeOfLogin: "google",
          clientId: "221898609709-obfn3p63741l5333093430j3qeiinaa8.apps.googleusercontent.com",
          verifier: "google-lrc",
        });
      });
  var onClick = function (param) {
    var __x = torusLogin(torusObj);
    __x.then(function (loginObj) {
          return Promise.resolve(Curry._1(setYourEthAddress, (function (param) {
                            return loginObj.publicAddress;
                          })));
        });
    
  };
  return React.createElement("div", undefined, yourEthAddress !== undefined ? React.createElement(React.Fragment, undefined, React.createElement("h1", undefined, "You are logged in!"), React.createElement("p", undefined, yourEthAddress)) : React.createElement(React.Fragment, undefined, React.createElement("h1", undefined, "Login With DirectAuth"), React.createElement("button", {
                        onClick: onClick
                      }, "Google Login")));
}

var AuthPage = {
  make: App$AuthPage
};

function App(Props) {
  var match = React.useState(function () {
        
      });
  var setTorusInstance = match[1];
  var torusInstance = match[0];
  React.useEffect((function () {
          var __x = Curry._1(getTorus, undefined);
          __x.then(function (torusInstance) {
                return Promise.resolve(Curry._1(setTorusInstance, (function (param) {
                                  return Caml_option.some(torusInstance);
                                })));
              });
          
        }), []);
  if (torusInstance !== undefined) {
    return React.createElement(App$AuthPage, {
                torusObj: Caml_option.valFromOption(torusInstance)
              });
  } else {
    return React.createElement("h1", undefined, "Loading");
  }
}

var make = App;

export {
  getTorus ,
  AuthPage ,
  make ,
  
}
/* react Not a pure module */
