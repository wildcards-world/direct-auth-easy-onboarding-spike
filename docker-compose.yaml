version: "3.6"
services:
  hasura-actions:
    build: ./actions
    volumes:
      ["./actions/src:/app/src", "./actions/node_modules:/app/node_modules"]
    ports:
      - "${ACTIONS_PORT_EXTERNAL}:${ACTIONS_PORT}"
    environment:
      PORT: ${ACTIONS_PORT}
      GRAPHQL_ENDPOINT: graphql-engine:8080/v1/graphql
    command: ${ACTIONS_START_COMMAND}
    restart: always
  postgres:
    # container_name: hasura-postgres
    image: postgres:12
    restart: always
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  graphql-engine:
    # name: graphql-engine
    container_name: graphql-engine
    image: hasura/graphql-engine:v1.3.0-beta.4
    # image: hasura/graphql-engine:latest
    # image: hasura/graphql-engine:v1.2.0
    ports:
      - "${HASURA_EXTERNAL_PORT}:8080"
    volumes:
      # - ./wildcards/metadata:/hasura-metadata
      - ./wildcards/migrations:/hasura-migrations
    depends_on:
      - "postgres"
      - "hasura-actions"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_NO_OF_RETRIES: 10
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      # HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      HASURA_GRAPHQL_AUTH_HOOK: http://hasura-actions:${ACTIONS_PORT}/auth
      HASURA_GRAPHQL_AUTH_HOOK_MODE: POST
volumes:
  db_data:
  data_dir:
